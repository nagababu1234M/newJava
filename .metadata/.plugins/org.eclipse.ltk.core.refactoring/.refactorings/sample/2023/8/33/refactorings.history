<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Extract local variable &apos;sumofReduce&apos; from expression &apos;Integer::sum&apos;&#x0D;&#x0A;- Original project: &apos;sample&apos;&#x0D;&#x0A;- Variable name: &apos;sumofReduce&apos;&#x0D;&#x0A;- Destination method: &apos;Inheritence.practiceLogical.main(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;Integer::sum&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;sumofReduce&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src\/main\/java=/optional=/true=/=/maven.pomderived=/true=/&lt;Inheritence{practiceLogical.java" name="sumofReduce" replace="true" selection="819 12" stamp="1692083501368" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;exampleMapMethod&apos; from expression &apos;x -&gt; x * x&apos;&#x0D;&#x0A;- Original project: &apos;sample&apos;&#x0D;&#x0A;- Variable name: &apos;exampleMapMethod&apos;&#x0D;&#x0A;- Destination method: &apos;Inheritence.BehaverioalParametearization.main(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;x -&gt; x * x&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;exampleMapMethod&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src\/main\/java=/optional=/true=/=/maven.pomderived=/true=/&lt;Inheritence{BehaverioalParametearization.java" name="exampleMapMethod" replace="true" selection="261 6" stamp="1692087142652" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract method &apos;private static void functionBeha(List&lt;Integer&gt; li, Function&lt;Integer,Integer&gt; exampleMapMethod)&apos; from &apos;Inheritence.BehaverioalParametearization.main(...)&apos; to &apos;Inheritence.BehaverioalParametearization&apos;&#x0D;&#x0A;- Original project: &apos;sample&apos;&#x0D;&#x0A;- Method name: &apos;functionBeha&apos;&#x0D;&#x0A;- Destination type: &apos;Inheritence.BehaverioalParametearization&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;functionBeha&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src\/main\/java=/optional=/true=/=/maven.pomderived=/true=/&lt;Inheritence{BehaverioalParametearization.java" name="functionBeha" replace="false" selection="337 67" stamp="1692087352112" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract local variable &apos;PredicatorForloop&apos; from expression &apos;x -&gt; x % 2 == 0&apos;&#x0D;&#x0A;- Original project: &apos;sample&apos;&#x0D;&#x0A;- Variable name: &apos;PredicatorForloop&apos;&#x0D;&#x0A;- Destination method: &apos;Inheritence.BehaverioalParametearization.main(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;x -&gt; x % 2 == 0&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;PredicatorForloop&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src\/main\/java=/optional=/true=/=/maven.pomderived=/true=/&lt;Inheritence{BehaverioalParametearization.java" name="PredicatorForloop" replace="true" selection="514 9" stamp="1692094436320" varType="false" version="1.0"/>&#x0A;&#x0A;&#x0A;&#x0A;<refactoring comment="Extract method &apos;private static List&lt;Integer&gt; mapAndRefactor(List&lt;Integer&gt; li, Predicate&lt;Integer&gt; PredicatorForloop)&apos; from &apos;Inheritence.BehaverioalParametearization.main(...)&apos; to &apos;Inheritence.BehaverioalParametearization&apos;&#x0D;&#x0A;- Original project: &apos;sample&apos;&#x0D;&#x0A;- Method name: &apos;mapAndRefactor&apos;&#x0D;&#x0A;- Destination type: &apos;Inheritence.BehaverioalParametearization&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;mapAndRefactor&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src\/main\/java=/optional=/true=/=/maven.pomderived=/true=/&lt;Inheritence{BehaverioalParametearization.java" name="mapAndRefactor" replace="false" selection="586 66" stamp="1692094719132" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract method &apos;private static void ComparingByNofStudents()&apos; from &apos;Inheritence.CourcesCustomeClass.main(...)&apos; to &apos;Inheritence.CourcesCustomeClass&apos;&#x0D;&#x0A;- Original project: &apos;sample&apos;&#x0D;&#x0A;- Method name: &apos;ComparingByNofStudents&apos;&#x0D;&#x0A;- Destination type: &apos;Inheritence.CourcesCustomeClass&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;ComparingByNofStudents&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src\/main\/java=/optional=/true=/=/maven.pomderived=/true=/&lt;Inheritence{CourcesCustomeClass.java" name="ComparingByNofStudents" replace="false" selection="1996 22" stamp="1692208543873" version="1.0" visibility="2"/>
</session>