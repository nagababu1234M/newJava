package Inheritence;

import java.util.Comparator;
import java.util.List;
import java.util.stream.Collectors;

class Course{
	private String category;
	private int reviewScore;
	private int noOfStudents;
	private String name;
	
	public Course(String name, String category, int reviewScore, int noOfStudents) {
		super();
		this.name = name;
		this.category = category;
		this.reviewScore = reviewScore;
		this.noOfStudents = noOfStudents;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public String getCategory() {
		return category;
	}
	public void setCategory(String category) {
		this.category = category;
	}
	public int getReviewScore() {
		return reviewScore;
	}
	public void setReviewScore(int reviewScore) {
		this.reviewScore = reviewScore;
	}
	public int getNoOfStudents() {
		return noOfStudents;
	}
	public void setNoOfStudents(int noOfStudents) {
		this.noOfStudents = noOfStudents;
	}
	@Override
	public String toString() {
		return "category=" + category + ", reviewScore=" + reviewScore + ", noOfStudents=" + noOfStudents
				+ ", name=" + name ;
	}
	
}

public class CourcesCustomeClass {

	public static void main(String args[]) {
		List<Course> course=List.of(
				new Course("Spring","framework",98,20000),
				new Course("spring Boot","framework",92,18500),
				new Course("Microservices","Microservices",85,19200),
				new Course("Fullstack","Fullstack",79,20000),
				new Course("Aws","Cloud",100,17898),
				new Course("Azure","Cloud",92,28999),
				new Course("Docker","Cloud",90,22000),
				new Course("Kubernates","Cloud",82,24200),
				new Course("React","UI",82,16000),
				new Course("java","Backend",98,10500),
				new Course("Angular","UI",100,19789),
				new Course("Node","Backend",79,20000)
				);
		
//		course.stream().filter(x->x.getReviewScore()==98).forEach(System.out::println);
      // using comparator to sort thevalues by using comparator.comparing 
		Comparator<Course> ComparingByNofStudents=Comparator.comparing(Course::getNoOfStudents);
		System.out.println(course.stream().sorted(ComparingByNofStudents).collect(Collectors.toList()));
		
	}

	
}
